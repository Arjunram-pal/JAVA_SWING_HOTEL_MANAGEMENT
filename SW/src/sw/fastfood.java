/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sw;

import java.awt.Color;
import java.awt.Container;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Arjunram Pal
 */
public class fastfood extends javax.swing.JFrame {
    
    
    double price_bottle=20.00;
    double price_fries =50.00;
    double price_salad=30.00;
    double price_hamburgar=99.00;
    double price_onion=55.00;
    double price_chicken=110.00;
    double price_tea=15.00;
    double price_cola=65.00;
    double price_coffee=70.00;
    double price_orange=80.00;
    double price_hash=55.00;
    double price_toasted=35.00;
    double price_chocolate=35.00;
    double price_pancakes=66.00;
    double price_cone=78.00;
    double price_shake=89.00;
    double price_sta=67.00;
    double price_choco=87.00;
    double price_fish=150.00;
    double price_cheese=120.00;
    double price_sand=140.00;
    double tax_fare=0.25;
    
    double iTax,iTotal,iSubtotal,iChange,iCost;
    
    double[] itemcost=new double[22];
    

    /**
     * Creates new form fastfood
     */
    public fastfood() {
        Container c= getContentPane();
        c.setBackground(new Color(52, 78, 78));
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        salad = new javax.swing.JCheckBox();
        s = new javax.swing.JCheckBox();
        ham = new javax.swing.JCheckBox();
        onion = new javax.swing.JCheckBox();
        chicken = new javax.swing.JCheckBox();
        fish = new javax.swing.JCheckBox();
        cheese = new javax.swing.JCheckBox();
        sand = new javax.swing.JCheckBox();
        cash11 = new javax.swing.JTextField();
        salad1 = new javax.swing.JTextField();
        cheese1 = new javax.swing.JTextField();
        sand1 = new javax.swing.JTextField();
        h1 = new javax.swing.JTextField();
        onion1 = new javax.swing.JTextField();
        chi1 = new javax.swing.JTextField();
        fish1 = new javax.swing.JTextField();
        fries = new javax.swing.JCheckBox();
        toasted = new javax.swing.JCheckBox();
        pineapple = new javax.swing.JCheckBox();
        m = new javax.swing.JCheckBox();
        ft1 = new javax.swing.JTextField();
        ss2 = new javax.swing.JTextField();
        toasted1 = new javax.swing.JTextField();
        pineapple1 = new javax.swing.JTextField();
        mtt = new javax.swing.JTextField();
        card = new javax.swing.JComboBox<>();
        total1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        totalbtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        total = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tax = new javax.swing.JLabel();
        sub = new javax.swing.JLabel();
        sy1 = new javax.swing.JTextField();
        changes12 = new javax.swing.JTextField();
        tax1 = new javax.swing.JTextField();
        sub1 = new javax.swing.JTextField();
        hash = new javax.swing.JCheckBox();
        tea = new javax.swing.JCheckBox();
        coffee = new javax.swing.JCheckBox();
        cola = new javax.swing.JCheckBox();
        s2 = new javax.swing.JCheckBox();
        orange = new javax.swing.JCheckBox();
        bottle = new javax.swing.JCheckBox();
        cone = new javax.swing.JCheckBox();
        shake = new javax.swing.JCheckBox();
        s1 = new javax.swing.JCheckBox();
        hash1 = new javax.swing.JTextField();
        t1 = new javax.swing.JTextField();
        c1 = new javax.swing.JTextField();
        coffee1 = new javax.swing.JTextField();
        or1 = new javax.swing.JTextField();
        bott1 = new javax.swing.JTextField();
        cone1 = new javax.swing.JTextField();
        shake1 = new javax.swing.JTextField();
        ss1 = new javax.swing.JTextField();
        changes = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Ink Free", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Fast Food ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(383, 383, 383)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(426, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 100));

        salad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        salad.setForeground(new java.awt.Color(255, 255, 255));
        salad.setText("Salad");
        salad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saladActionPerformed(evt);
            }
        });
        getContentPane().add(salad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        s.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        s.setForeground(new java.awt.Color(255, 255, 255));
        s.setText("Pancakes- Syrup");
        s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sActionPerformed(evt);
            }
        });
        getContentPane().add(s, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, -1, -1));

        ham.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ham.setForeground(new java.awt.Color(255, 255, 255));
        ham.setText("Hamburgar");
        ham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hamActionPerformed(evt);
            }
        });
        getContentPane().add(ham, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        onion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        onion.setForeground(new java.awt.Color(255, 255, 255));
        onion.setText("Onion Rings");
        onion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onionActionPerformed(evt);
            }
        });
        getContentPane().add(onion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        chicken.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chicken.setForeground(new java.awt.Color(255, 255, 255));
        chicken.setText("Chicken salad");
        chicken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickenActionPerformed(evt);
            }
        });
        getContentPane().add(chicken, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        fish.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fish.setForeground(new java.awt.Color(255, 255, 255));
        fish.setText("Fish Sandwich");
        fish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fishActionPerformed(evt);
            }
        });
        getContentPane().add(fish, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, -1, -1));

        cheese.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cheese.setForeground(new java.awt.Color(255, 255, 255));
        cheese.setText("Cheese Sandwich");
        cheese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheeseActionPerformed(evt);
            }
        });
        getContentPane().add(cheese, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));

        sand.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sand.setForeground(new java.awt.Color(255, 255, 255));
        sand.setText("Chicken Sandwich");
        sand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sandActionPerformed(evt);
            }
        });
        getContentPane().add(sand, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, -1, -1));

        cash11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cash11.setText("0");
        cash11.setToolTipText("");
        cash11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cash11ActionPerformed(evt);
            }
        });
        getContentPane().add(cash11, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 530, 110, 30));

        salad1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        salad1.setText("0");
        salad1.setEnabled(false);
        salad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salad1ActionPerformed(evt);
            }
        });
        salad1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                salad1KeyTyped(evt);
            }
        });
        getContentPane().add(salad1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 110, 30));

        cheese1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cheese1.setText("0");
        cheese1.setEnabled(false);
        cheese1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheese1ActionPerformed(evt);
            }
        });
        cheese1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cheese1KeyTyped(evt);
            }
        });
        getContentPane().add(cheese1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 520, 120, 30));

        sand1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sand1.setText("0");
        sand1.setEnabled(false);
        sand1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sand1ActionPerformed(evt);
            }
        });
        sand1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sand1KeyTyped(evt);
            }
        });
        getContentPane().add(sand1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 580, 120, 30));

        h1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        h1.setText("0");
        h1.setEnabled(false);
        h1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h1ActionPerformed(evt);
            }
        });
        h1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                h1KeyTyped(evt);
            }
        });
        getContentPane().add(h1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 110, 30));

        onion1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        onion1.setText("0");
        onion1.setEnabled(false);
        onion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onion1ActionPerformed(evt);
            }
        });
        onion1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onion1KeyTyped(evt);
            }
        });
        getContentPane().add(onion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 110, 30));

        chi1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        chi1.setText("0");
        chi1.setEnabled(false);
        chi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chi1ActionPerformed(evt);
            }
        });
        chi1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chi1KeyTyped(evt);
            }
        });
        getContentPane().add(chi1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 110, 30));

        fish1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fish1.setText("0");
        fish1.setEnabled(false);
        fish1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fish1ActionPerformed(evt);
            }
        });
        fish1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fish1KeyTyped(evt);
            }
        });
        getContentPane().add(fish1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 460, 120, 30));

        fries.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fries.setForeground(new java.awt.Color(255, 255, 255));
        fries.setText("Fries");
        fries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friesActionPerformed(evt);
            }
        });
        getContentPane().add(fries, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        toasted.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        toasted.setForeground(new java.awt.Color(255, 255, 255));
        toasted.setText("Toasted Bagel");
        toasted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toastedActionPerformed(evt);
            }
        });
        getContentPane().add(toasted, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, -1, -1));

        pineapple.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pineapple.setForeground(new java.awt.Color(255, 255, 255));
        pineapple.setText("Pineapple Stick");
        pineapple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pineappleActionPerformed(evt);
            }
        });
        getContentPane().add(pineapple, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, -1, -1));

        m.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        m.setForeground(new java.awt.Color(255, 255, 255));
        m.setText("Chocolate Muffin");
        m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mActionPerformed(evt);
            }
        });
        getContentPane().add(m, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 290, -1, -1));

        ft1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ft1.setText("0");
        ft1.setEnabled(false);
        ft1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ft1ActionPerformed(evt);
            }
        });
        ft1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ft1KeyTyped(evt);
            }
        });
        getContentPane().add(ft1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 110, 30));

        ss2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ss2.setText("0");
        ss2.setEnabled(false);
        ss2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ss2ActionPerformed(evt);
            }
        });
        ss2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ss2KeyTyped(evt);
            }
        });
        getContentPane().add(ss2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 590, 100, 30));

        toasted1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        toasted1.setText("0");
        toasted1.setEnabled(false);
        toasted1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toasted1ActionPerformed(evt);
            }
        });
        toasted1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                toasted1KeyTyped(evt);
            }
        });
        getContentPane().add(toasted1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, 110, 30));

        pineapple1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pineapple1.setText("0");
        pineapple1.setEnabled(false);
        pineapple1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pineapple1ActionPerformed(evt);
            }
        });
        pineapple1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pineapple1KeyTyped(evt);
            }
        });
        getContentPane().add(pineapple1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 240, 110, 30));

        mtt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mtt.setText("0");
        mtt.setEnabled(false);
        mtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mttActionPerformed(evt);
            }
        });
        mtt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mttKeyTyped(evt);
            }
        });
        getContentPane().add(mtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 290, 110, 30));

        card.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        card.setForeground(new java.awt.Color(255, 255, 255));
        card.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Debit Card", "Master Card", "Visa Card" }));
        card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardActionPerformed(evt);
            }
        });
        getContentPane().add(card, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 480, 120, -1));

        total1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        total1.setToolTipText("");
        total1.setEnabled(false);
        total1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total1ActionPerformed(evt);
            }
        });
        getContentPane().add(total1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 580, 70, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 640, -1, -1));

        totalbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalbtn.setText("Total");
        totalbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalbtnActionPerformed(evt);
            }
        });
        getContentPane().add(totalbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 640, -1, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 640, -1, -1));

        total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setText("Total");
        getContentPane().add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 580, 70, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Fast Meal and Vegetarian");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 190, 30));

        tax.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tax.setForeground(new java.awt.Color(255, 255, 255));
        tax.setText("Tax");
        getContentPane().add(tax, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 470, 70, 20));

        sub.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sub.setForeground(new java.awt.Color(255, 255, 255));
        sub.setText("Sub Total");
        getContentPane().add(sub, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 530, 70, 20));

        sy1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sy1.setText("0");
        sy1.setEnabled(false);
        sy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sy1ActionPerformed(evt);
            }
        });
        sy1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sy1KeyTyped(evt);
            }
        });
        getContentPane().add(sy1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 340, 110, 30));

        changes12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        changes12.setToolTipText("");
        changes12.setEnabled(false);
        changes12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changes12ActionPerformed(evt);
            }
        });
        getContentPane().add(changes12, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, 70, 30));

        tax1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tax1.setToolTipText("");
        tax1.setEnabled(false);
        tax1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tax1ActionPerformed(evt);
            }
        });
        getContentPane().add(tax1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 470, 70, 30));

        sub1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sub1.setToolTipText("");
        sub1.setEnabled(false);
        sub1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sub1ActionPerformed(evt);
            }
        });
        getContentPane().add(sub1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 530, 70, 30));

        hash.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hash.setForeground(new java.awt.Color(255, 255, 255));
        hash.setText("Hash Brown");
        hash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hashActionPerformed(evt);
            }
        });
        getContentPane().add(hash, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, -1, -1));

        tea.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tea.setForeground(new java.awt.Color(255, 255, 255));
        tea.setText("Tea");
        tea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teaActionPerformed(evt);
            }
        });
        tea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                teaKeyTyped(evt);
            }
        });
        getContentPane().add(tea, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 140, -1, -1));

        coffee.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        coffee.setForeground(new java.awt.Color(255, 255, 255));
        coffee.setText("Coffee");
        coffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coffeeActionPerformed(evt);
            }
        });
        getContentPane().add(coffee, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, -1, -1));

        cola.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cola.setForeground(new java.awt.Color(255, 255, 255));
        cola.setText("Cola");
        cola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colaActionPerformed(evt);
            }
        });
        getContentPane().add(cola, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 180, -1, -1));

        s2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        s2.setForeground(new java.awt.Color(255, 255, 255));
        s2.setText("Chocolate Milk Shake");
        s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s2ActionPerformed(evt);
            }
        });
        getContentPane().add(s2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 590, -1, -1));

        orange.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orange.setForeground(new java.awt.Color(255, 255, 255));
        orange.setText("Orange");
        orange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orangeActionPerformed(evt);
            }
        });
        getContentPane().add(orange, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 260, -1, -1));

        bottle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bottle.setForeground(new java.awt.Color(255, 255, 255));
        bottle.setText("Bottle water");
        bottle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottleActionPerformed(evt);
            }
        });
        getContentPane().add(bottle, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 310, -1, -1));

        cone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cone.setForeground(new java.awt.Color(255, 255, 255));
        cone.setText("Vanilla Cone");
        cone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coneActionPerformed(evt);
            }
        });
        getContentPane().add(cone, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 440, -1, -1));

        shake.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        shake.setForeground(new java.awt.Color(255, 255, 255));
        shake.setText("vanilla shake");
        shake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shakeActionPerformed(evt);
            }
        });
        getContentPane().add(shake, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 490, -1, -1));

        s1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        s1.setForeground(new java.awt.Color(255, 255, 255));
        s1.setText("Strawberry Shake");
        s1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1ActionPerformed(evt);
            }
        });
        getContentPane().add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 540, -1, -1));

        hash1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hash1.setText("0");
        hash1.setEnabled(false);
        hash1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hash1ActionPerformed(evt);
            }
        });
        hash1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hash1KeyTyped(evt);
            }
        });
        getContentPane().add(hash1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 110, 30));

        t1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t1.setText("0");
        t1.setEnabled(false);
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });
        t1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t1KeyTyped(evt);
            }
        });
        getContentPane().add(t1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 140, 120, 30));

        c1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        c1.setText("0");
        c1.setEnabled(false);
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        c1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c1KeyTyped(evt);
            }
        });
        getContentPane().add(c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 180, 120, 30));

        coffee1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        coffee1.setText("0");
        coffee1.setEnabled(false);
        coffee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coffee1ActionPerformed(evt);
            }
        });
        coffee1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coffee1KeyTyped(evt);
            }
        });
        getContentPane().add(coffee1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 220, 120, 30));

        or1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        or1.setText("0");
        or1.setEnabled(false);
        or1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                or1ActionPerformed(evt);
            }
        });
        or1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                or1KeyTyped(evt);
            }
        });
        getContentPane().add(or1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 260, 120, 30));

        bott1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bott1.setText("0");
        bott1.setEnabled(false);
        bott1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bott1ActionPerformed(evt);
            }
        });
        bott1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bott1KeyTyped(evt);
            }
        });
        getContentPane().add(bott1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 300, 120, 30));

        cone1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cone1.setText("0");
        cone1.setEnabled(false);
        cone1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cone1ActionPerformed(evt);
            }
        });
        cone1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cone1KeyTyped(evt);
            }
        });
        getContentPane().add(cone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 440, 100, 30));

        shake1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        shake1.setText("0");
        shake1.setEnabled(false);
        shake1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shake1ActionPerformed(evt);
            }
        });
        shake1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                shake1KeyTyped(evt);
            }
        });
        getContentPane().add(shake1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 490, 100, 30));

        ss1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ss1.setText("0");
        ss1.setEnabled(false);
        ss1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ss1ActionPerformed(evt);
            }
        });
        ss1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ss1KeyTyped(evt);
            }
        });
        getContentPane().add(ss1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 540, 100, 30));

        changes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        changes.setForeground(new java.awt.Color(255, 255, 255));
        changes.setText("Changes");
        getContentPane().add(changes, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, 70, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Desserts");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, 70, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Payment Method");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, 130, 20));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Shakes");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 390, 70, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Sandwich");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 70, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Drinks");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 110, 70, 30));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, 340, 10));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 410, 10, 270));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 400, 10, 280));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 680, 350, 10));

        setSize(new java.awt.Dimension(1033, 760));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cheese1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheese1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cheese1ActionPerformed

    private void h1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_h1ActionPerformed

    private void cash11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cash11ActionPerformed
        // TODO add your handling code here:
        cash11.setText("");
    }//GEN-LAST:event_cash11ActionPerformed

    private void onion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_onion1ActionPerformed

    private void chi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chi1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chi1ActionPerformed

    private void fish1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fish1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fish1ActionPerformed

    private void sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sActionPerformed
        // TODO add your handling code here:
         if(s.isSelected())
        {
            sy1.setEnabled(true);
            sy1.setText("");
        }
        else
        {
            sy1.setEnabled(false);
        }
    }//GEN-LAST:event_sActionPerformed

    private void toastedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toastedActionPerformed
        // TODO add your handling code here:
        if(toasted.isSelected())
        {
            toasted1.setEnabled(true);
            toasted1.setText("");
        }
        else
        {
            toasted1.setEnabled(false);
        }
    }//GEN-LAST:event_toastedActionPerformed

    private void pineappleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pineappleActionPerformed
        // TODO add your handling code here:
         if(pineapple.isSelected())
        {
            pineapple1.setEnabled(true);
            pineapple1.setText("");
        }
        else
        {
            pineapple1.setEnabled(false);
        }
    }//GEN-LAST:event_pineappleActionPerformed

    private void mActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mActionPerformed
        // TODO add your handling code here:
         if(m.isSelected())
        {
           mtt.setEnabled(true);
           mtt.setText("");
        }
        else
        {
            mtt.setEnabled(false);
        }
    }//GEN-LAST:event_mActionPerformed

    private void ft1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ft1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ft1ActionPerformed

    private void ss2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ss2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ss2ActionPerformed

    private void toasted1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toasted1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toasted1ActionPerformed

    private void pineapple1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pineapple1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pineapple1ActionPerformed

    private void mttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mttActionPerformed

    private void total1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_total1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         this.hide();
        Hotelswing frm = new Hotelswing();
        frm.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        t1.setText("0");
        ft1.setText("0");
        h1.setText("0");
        chi1.setText("0");
        salad1.setText("0");
        onion1.setText("0");
        hash1.setText("0");
        toasted1.setText("0");
        pineapple1.setText("0");
        mtt.setText("0");
        sy1.setText("0");
        c1.setText("0");
        coffee1.setText("0");
        or1.setText("0");
        bott1.setText("0");
        fish1.setText("0");
        cheese1.setText("0");
        sand1.setText("0");
        changes12.setText("0");
        tax1.setText("0");
        total1.setText("0");
        sub1.setText("0");
        cone1.setText("0");
        shake1.setText("0");
        ss1.setText("0");
        ss2.setText("0");
        cash11.setText(null);
        
        s1.setSelected(false);
        s2.setSelected(false);
        cone.setSelected(false);
        shake.setSelected(false);
        sand.setSelected(false);
        cheese.setSelected(false);
        fish.setSelected(false);
        bottle.setSelected(false);
        coffee.setSelected(false);
        tea.setSelected(false);
        cola.setSelected(false);
        orange.setSelected(false);
        fries.setSelected(false);
        salad.setSelected(false);
        onion.setSelected(false);
        ham.setSelected(false);
        chicken.setSelected(false);
        hash.setSelected(false);
        toasted.setSelected(false);
        pineapple.setSelected(false);
        m.setSelected(false);
        s.setSelected(false);
                
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void sy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sy1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_sy1ActionPerformed

    private void changes12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changes12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changes12ActionPerformed

    private void tax1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tax1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tax1ActionPerformed

    private void sub1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sub1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sub1ActionPerformed

    private void hash1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hash1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hash1ActionPerformed

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void coffee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coffee1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coffee1ActionPerformed

    private void or1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_or1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_or1ActionPerformed

    private void bott1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bott1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bott1ActionPerformed

    private void cone1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cone1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cone1ActionPerformed

    private void shake1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shake1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shake1ActionPerformed

    private void ss1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ss1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ss1ActionPerformed

    private void saladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saladActionPerformed
        // TODO add your handling code here:
         if(salad.isSelected())
        {
            salad1.setEnabled(true);
            salad1.setText("");
        }
        else
        {
            salad1.setEnabled(false);
        }
    }//GEN-LAST:event_saladActionPerformed

    private void coneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coneActionPerformed
        // TODO add your handling code here:
         if(cone.isSelected())
        {
            cone1.setEnabled(true);
            cone1.setText("");
        }
        else
        {
            cone1.setEnabled(false);
        }
    }//GEN-LAST:event_coneActionPerformed

    private void salad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salad1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salad1ActionPerformed

    private void sand1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sand1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sand1ActionPerformed

    private void sandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sandActionPerformed
        // TODO add your handling code here:
         if(sand.isSelected())
        {
            sand1.setEnabled(true);
            sand1.setText("");
        }
        else
        {
            sand1.setEnabled(false);
        }
    }//GEN-LAST:event_sandActionPerformed

    private void s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s2ActionPerformed
        // TODO add your handling code here:
         if(s2.isSelected())
        {
            ss2.setEnabled(true);
            ss2.setText("");
        }
        else
        {
            ss2.setEnabled(false);
        }
    }//GEN-LAST:event_s2ActionPerformed

    private void cardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardActionPerformed

    private void onionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onionActionPerformed
        // TODO add your handling code here:
         if(onion.isSelected())
        {
            onion1.setEnabled(true);
            onion1.setText("");
        }
        else
        {
            onion1.setEnabled(false);
        }
    }//GEN-LAST:event_onionActionPerformed

    private void colaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colaActionPerformed
        // TODO add your handling code here:
         if(cola.isSelected())
        {
            c1.setEnabled(true);
            c1.setText("");
        }
        else
        {
            c1.setEnabled(false);
        }
    }//GEN-LAST:event_colaActionPerformed

    private void coffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coffeeActionPerformed
        // TODO add your handling code here:
         if(coffee.isSelected())
        {
            coffee1.setEnabled(true);
            coffee1.setText("");
        }
        else
        {
            coffee1.setEnabled(false);
        }
    }//GEN-LAST:event_coffeeActionPerformed

    private void ft1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ft1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_ft1KeyTyped

    private void salad1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salad1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_salad1KeyTyped

    private void h1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_h1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_h1KeyTyped

    private void onion1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onion1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_onion1KeyTyped

    private void chi1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chi1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_chi1KeyTyped

    private void hash1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hash1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
        
    }//GEN-LAST:event_hash1KeyTyped

    private void toasted1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_toasted1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_toasted1KeyTyped

    private void pineapple1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pineapple1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_pineapple1KeyTyped

    private void mttKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mttKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_mttKeyTyped

    private void sy1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sy1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_sy1KeyTyped

    private void t1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_t1KeyTyped

    private void c1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_c1KeyTyped

    private void coffee1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coffee1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_coffee1KeyTyped

    private void or1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_or1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_or1KeyTyped

    private void bott1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bott1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_bott1KeyTyped

    private void fish1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fish1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_fish1KeyTyped

    private void cheese1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cheese1KeyTyped
        // TODO add your handling code here
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_cheese1KeyTyped

    private void sand1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sand1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_sand1KeyTyped

    private void cone1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cone1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_cone1KeyTyped

    private void shake1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_shake1KeyTyped
        // TODO add your handling code here
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_shake1KeyTyped

    private void ss1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ss1KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_ss1KeyTyped

    private void ss2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ss2KeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_ss2KeyTyped

    private void friesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friesActionPerformed
        // TODO add your handling code here:
        if(fries.isSelected())
        {
            ft1.setEnabled(true);
            ft1.setText("");
        }
        else
        {
            ft1.setEnabled(false);
        }
    }//GEN-LAST:event_friesActionPerformed

    private void hamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hamActionPerformed
        // TODO add your handling code here:
         if(ham.isSelected())
        {
            h1.setEnabled(true);
            h1.setText("");
        }
        else
        {
            h1.setEnabled(false);
        }
    }//GEN-LAST:event_hamActionPerformed

    private void chickenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickenActionPerformed
        // TODO add your handling code here:
         if(chicken.isSelected())
        {
            chi1.setEnabled(true);
            chi1.setText("");
        }
        else
        {
            chi1.setEnabled(false);
        }
    }//GEN-LAST:event_chickenActionPerformed

    private void fishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fishActionPerformed
        // TODO add your handling code here:
         if(fish.isSelected())
        {
            fish1.setEnabled(true);
            fish1.setText("");
        }
        else
        {
            fish1.setEnabled(false);
        }
    }//GEN-LAST:event_fishActionPerformed

    private void cheeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheeseActionPerformed
        // TODO add your handling code here:
         if(cheese.isSelected())
        {
           cheese1.setEnabled(true);
           cheese1.setText("");
        }
        else
        {
            cheese1.setEnabled(false);
        }
    }//GEN-LAST:event_cheeseActionPerformed

    private void hashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hashActionPerformed
        // TODO add your handling code here:
         if(hash.isSelected())
        {
            hash1.setEnabled(true);
            hash1.setText("");
        }
        else
        {
            hash1.setEnabled(false);
        }
    }//GEN-LAST:event_hashActionPerformed

    private void teaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teaActionPerformed
        // TODO add your handling code here:
         if(tea.isSelected())
        {
            t1.setEnabled(true);
            t1.setText("");
        }
        else
        {
            t1.setEnabled(false);
        }
    }//GEN-LAST:event_teaActionPerformed

    private void orangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orangeActionPerformed
        // TODO add your handling code here:
         if(orange.isSelected())
        {
            or1.setEnabled(true);
            or1.setText("");
        }
        else
        {
            or1.setEnabled(false);
        }
    }//GEN-LAST:event_orangeActionPerformed

    private void bottleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottleActionPerformed
        // TODO add your handling code here:
         if(bottle.isSelected())
        {
            bott1.setEnabled(true);
            bott1.setText("");
        }
        else
        {
           bott1.setEnabled(false);
        }
    }//GEN-LAST:event_bottleActionPerformed

    private void shakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shakeActionPerformed
        // TODO add your handling code her
         if(shake.isSelected())
        {
            shake1.setEnabled(true);
            shake1.setText("");
        }
        else
        {
            shake1.setEnabled(false);
        }
    }//GEN-LAST:event_shakeActionPerformed

    private void s1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1ActionPerformed
        // TODO add your handling code here:
         if(s1.isSelected())
        {
            ss1.setEnabled(true);
            ss1.setText("");
        }
        else
        {
            ss1.setEnabled(false);
        }
    }//GEN-LAST:event_s1ActionPerformed

    private void totalbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalbtnActionPerformed
        // TODO add your handling code here:
        itemcost[0] =Double.parseDouble(ft1.getText());
        itemcost[1] =Double.parseDouble(t1.getText());
        itemcost[2] =Double.parseDouble(ss1.getText());
        itemcost[3] =Double.parseDouble(ss2.getText());
        itemcost[4] =Double.parseDouble(cone1.getText());
        itemcost[5] =Double.parseDouble(shake1.getText());
        itemcost[6] =Double.parseDouble(sand1.getText());
        itemcost[7] =Double.parseDouble(cheese1.getText());
        itemcost[8] =Double.parseDouble(fish1.getText());
        itemcost[9] =Double.parseDouble(bott1.getText());
        itemcost[10] =Double.parseDouble(coffee1.getText());
        itemcost[11] =Double.parseDouble(h1.getText());
        itemcost[12] =Double.parseDouble(chi1.getText());
        itemcost[13] =Double.parseDouble(salad1.getText());
        itemcost[14] =Double.parseDouble(onion1.getText());
        itemcost[15] =Double.parseDouble(hash1.getText());
        itemcost[16] =Double.parseDouble(toasted1.getText());
        itemcost[17] =Double.parseDouble(pineapple1.getText());
        itemcost[18] =Double.parseDouble(mtt.getText());
        itemcost[19] =Double.parseDouble(sy1.getText());
        itemcost[20] =Double.parseDouble(c1.getText());
        //for changes
        itemcost[21] =Double.parseDouble(or1.getText());
        
        iChange =Double.parseDouble(cash11.getText());
        
        String Payment=(String)card.getSelectedItem();
        
        if(Payment == "Cash")
        {
        
        iSubtotal= itemcost[0]  + itemcost[1] +itemcost[2] +itemcost[3] + itemcost[4]+ itemcost[5] + itemcost[6] + itemcost[7]
                 + itemcost[8] + itemcost[9] + itemcost[10] + itemcost[11] + itemcost[12] + itemcost[13] + itemcost[14] + itemcost[15]
                 + itemcost[16] + itemcost[17] + itemcost[18] + itemcost[19] + itemcost[20] + itemcost[21];
        
        if(iChange >= iSubtotal)
        {    
        
        iTax=(iSubtotal * tax_fare)/100;
        String cTax=String.format("$%.2f",iTax);
        tax1.setText(cTax);
        
        
        String cSubTotal = String.format("$%.2f",iSubtotal);
        sub1.setText(cSubTotal);
        
        String cTotal = String.format("$%.2f",iSubtotal+iTax);
        total1.setText(cTotal);
        
        String cChange = String.format("$%.2f",iChange - (iSubtotal + iTax));
        changes12.setText(cChange);
        
        
        }else{
            JOptionPane.showMessageDialog(null,"Not enough cost","Fast Food",JOptionPane.OK_OPTION);
        }
       
        }
        else if(Payment=="Debit Card"||Payment=="Visa Card" ||Payment=="Master Card")
        {
            iSubtotal= itemcost[0]  + itemcost[1] +itemcost[2] +itemcost[3] + itemcost[4]+ itemcost[5] + itemcost[6] + itemcost[7]
                 + itemcost[8] + itemcost[9] + itemcost[10] + itemcost[11] + itemcost[12] + itemcost[13] + itemcost[14] + itemcost[15]
                 + itemcost[16] + itemcost[17] + itemcost[18] + itemcost[19] + itemcost[20] + itemcost[21];
        
        iTax=(iSubtotal * tax_fare)/100;
        String cTax=String.format("$%.2f",iTax);
        tax1.setText(cTax);
        
        
        String cSubTotal = String.format("$%.2f",iSubtotal);
        sub1.setText(cSubTotal);
        
        String cTotal = String.format("$%.2f",iSubtotal+iTax);
        total1.setText(cTotal);
        
        
        
        }
         
        
        
        
    }//GEN-LAST:event_totalbtnActionPerformed

    private void teaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_teaKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_teaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fastfood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fastfood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fastfood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fastfood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fastfood().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bott1;
    private javax.swing.JCheckBox bottle;
    private javax.swing.JTextField c1;
    private javax.swing.JComboBox<String> card;
    private javax.swing.JTextField cash11;
    private javax.swing.JLabel changes;
    private javax.swing.JTextField changes12;
    private javax.swing.JCheckBox cheese;
    private javax.swing.JTextField cheese1;
    private javax.swing.JTextField chi1;
    private javax.swing.JCheckBox chicken;
    private javax.swing.JCheckBox coffee;
    private javax.swing.JTextField coffee1;
    private javax.swing.JCheckBox cola;
    private javax.swing.JCheckBox cone;
    private javax.swing.JTextField cone1;
    private javax.swing.JCheckBox fish;
    private javax.swing.JTextField fish1;
    private javax.swing.JCheckBox fries;
    private javax.swing.JTextField ft1;
    private javax.swing.JTextField h1;
    private javax.swing.JCheckBox ham;
    private javax.swing.JCheckBox hash;
    private javax.swing.JTextField hash1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox m;
    private javax.swing.JTextField mtt;
    private javax.swing.JCheckBox onion;
    private javax.swing.JTextField onion1;
    private javax.swing.JTextField or1;
    private javax.swing.JCheckBox orange;
    private javax.swing.JCheckBox pineapple;
    private javax.swing.JTextField pineapple1;
    private javax.swing.JCheckBox s;
    private javax.swing.JCheckBox s1;
    private javax.swing.JCheckBox s2;
    private javax.swing.JCheckBox salad;
    private javax.swing.JTextField salad1;
    private javax.swing.JCheckBox sand;
    private javax.swing.JTextField sand1;
    private javax.swing.JCheckBox shake;
    private javax.swing.JTextField shake1;
    private javax.swing.JTextField ss1;
    private javax.swing.JTextField ss2;
    private javax.swing.JLabel sub;
    private javax.swing.JTextField sub1;
    private javax.swing.JTextField sy1;
    private javax.swing.JTextField t1;
    private javax.swing.JLabel tax;
    private javax.swing.JTextField tax1;
    private javax.swing.JCheckBox tea;
    private javax.swing.JCheckBox toasted;
    private javax.swing.JTextField toasted1;
    private javax.swing.JLabel total;
    private javax.swing.JTextField total1;
    private javax.swing.JButton totalbtn;
    // End of variables declaration//GEN-END:variables
}
